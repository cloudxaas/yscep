[ yscep ]

#
# Common options for all operations
#
# URL of the SCEP server.
URL = http://localhost:8080/ejbca/publicweb/apply/scep/pkiclient.exe	

# Use HTTP proxy server
#Proxy		localhost:8080

# This is one is needed with all operations.
CACertFile = ./ca.crt

# Possible values: yes or no.
Verbose	 =  yes	
Debug = yes


#
# Options for getca
#
# Some CAs require you to define this
#CAIdentifier	"CA Identifier"

# Display fingerprint algorithm (md5/sha1)
FingerPrint	= sha1


#
# Options for enroll, getcert and getcrl
#
# Private key created with mkrequest
PrivateKeyFile = ./local.key

# Where to write successfully enrolled certificate
LocalCertFile = ./local.crt

# If your CA/RA uses a different certificates for encyption
# and signing, define this
#EncCertFile	./enc.crt

# PKCS#7 encryption/signing 
# Note: this could be very misleading, current SCEP draft provides no
# mechanism to "negotiate" the algorithm - even if you send 3des, reply
# might be des.

# Encryption algorithm: des, 3des or blowfish. Default: des
#EncAlgorithm	3des
# Signature algorithm: md5 or sha1. Default: md5
SigAlgorithm = sha1


#
# Options for enroll
#

# Certificate request file created with mkrequest
CertReqFile	= ./local.csr

# Write optionally the selfsigned certificate in file
#SelfSignedFile	./selfsigned.crt

# Poll periodically for pending certificate (seconds)
PollInterval =	60

# Maximum polling time
MaxPollTime = 28800

# Maximum polling count
MaxPollCount = 256



#
# Options for getcert
#
# Certificate serial number (decimal)
GetCertSerial	= 1

# Write certificate as
GetCertFile	 = ./cert.crt


#
# Options for getcrl
#
# Write CRL as
GetCrlFile = ./crl.crl

#sscep will use the KeyGenCmd and CsrGenCmd to generate the keys and CSRs
#If key is already generated & named $PrivateKeyFile, use blank KeyGenCmd
#If csr is already generated & named $CertReqFile, use blank KeyGenCmd
#sscep will automatically populate the placeholders in the commands below.
#
KeyGenCmd = "openssl genrsa -out $PrivateKeyFile 2048" 
#KeyGenCmd = openssl ecparam -name secp256k1 -genkey -noout -out $PrivateKeyFile
CsrGenCmd = "openssl req -new -key $PrivateKeyFile -out $CertReqFile -config $ConfigFile -reqexts v3_req" 

########################################################################################################

[ req ]

prompt = no

distinguished_name  = req_distinguished_name

attributes      = req_attributes

req_extensions = v3_req # The extensions to add to a certificate request

[ req_distinguished_name ]

commonName          = BZ

0.organizationName              = JZSV.ORG 


[ req_attributes ]

challengePassword       = ejbca

[ v3_req ]

basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

#EOF#

